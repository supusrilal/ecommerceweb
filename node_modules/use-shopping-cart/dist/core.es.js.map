{"version":3,"file":"core.es.js","sources":["../utilities/SSR.js","../core/Entry.js","../core/slice.js","../core/middleware/helpers.js","../core/middleware/stripe.js","../core/middleware/warnings.js","../core/index.js"],"sourcesContent":["export const isClient = typeof window === 'object'\r\n","import { isClient } from '../utilities/SSR'\r\n\r\nexport const formatCurrencyString = ({\r\n  value,\r\n  currency,\r\n  language = isClient ? navigator.language : 'en-US'\r\n}) => {\r\n  const numberFormat = new Intl.NumberFormat(language, {\r\n    style: 'currency',\r\n    currency,\r\n    currencyDisplay: 'symbol'\r\n  })\r\n  const parts = numberFormat.formatToParts(value)\r\n  let zeroDecimalCurrency = true\r\n\r\n  for (const part of parts) {\r\n    if (part.type === 'decimal') {\r\n      zeroDecimalCurrency = false\r\n      break\r\n    }\r\n  }\r\n\r\n  value = zeroDecimalCurrency ? value : parseFloat((value / 100).toFixed(2))\r\n  return numberFormat.format(value)\r\n}\r\n\r\nexport function updateFormattedTotalPrice(state) {\r\n  state.formattedTotalPrice = formatCurrencyString({\r\n    value: state.totalPrice,\r\n    currency: state.currency,\r\n    language: state.language\r\n  })\r\n}\r\n\r\nexport function updateFormattedValue(state, id) {\r\n  state.cartDetails[id].formattedValue = formatCurrencyString({\r\n    value: state.cartDetails[id].value,\r\n    currency: state.currency,\r\n    language: state.language\r\n  })\r\n}\r\n\r\nexport function updateFormattedPrice(state, id) {\r\n  state.cartDetails[id].formattedPrice = formatCurrencyString({\r\n    value: state.cartDetails[id].price,\r\n    currency: state.currency,\r\n    language: state.language\r\n  })\r\n}\r\n\r\nfunction Entry({ id, product, quantity, price_metadata, product_metadata }) {\r\n  return {\r\n    ...product,\r\n    id,\r\n    quantity,\r\n    value: product.price * quantity,\r\n    price_data: {\r\n      ...product.price_data,\r\n      ...price_metadata\r\n    },\r\n    product_data: {\r\n      ...product.product_data,\r\n      ...product_metadata\r\n    }\r\n  }\r\n}\r\n\r\nexport function createEntry({\r\n  state,\r\n  id,\r\n  product,\r\n  count,\r\n  price_metadata,\r\n  product_metadata\r\n}) {\r\n  const entry = Entry({\r\n    id,\r\n    product,\r\n    quantity: count,\r\n    price_metadata,\r\n    product_metadata\r\n  })\r\n\r\n  state.cartDetails[id] = entry\r\n  updateFormattedValue(state, id)\r\n  updateFormattedPrice(state, id)\r\n\r\n  state.totalPrice += entry.value\r\n  state.cartCount += count\r\n  updateFormattedTotalPrice(state)\r\n}\r\n\r\nexport function updateEntry({\r\n  state,\r\n  id,\r\n  count,\r\n  price_metadata,\r\n  product_metadata\r\n}) {\r\n  const entry = state.cartDetails[id]\r\n  if (entry.quantity + count <= 0) return removeEntry({ state, id })\r\n\r\n  state.cartDetails[id] = Entry({\r\n    id,\r\n    state,\r\n    product: entry,\r\n    quantity: entry.quantity + count,\r\n    price_metadata,\r\n    product_metadata\r\n  })\r\n  updateFormattedValue(state, id)\r\n\r\n  state.totalPrice += entry.price * count\r\n  state.cartCount += count\r\n  updateFormattedTotalPrice(state)\r\n}\r\n\r\nexport function removeEntry({ state, id }) {\r\n  const cartDetails = state.cartDetails\r\n  state.totalPrice -= cartDetails[id].value\r\n  state.cartCount -= cartDetails[id].quantity\r\n  delete cartDetails[id]\r\n  updateFormattedTotalPrice(state)\r\n}\r\n\r\nexport function updateQuantity({ state, id, quantity }) {\r\n  const entry = state.cartDetails[id]\r\n  updateEntry({\r\n    state,\r\n    id,\r\n    count: quantity - entry.quantity\r\n  })\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport {\r\n  createEntry,\r\n  updateEntry,\r\n  removeEntry,\r\n  updateQuantity,\r\n  updateFormattedTotalPrice\r\n} from './Entry'\r\nimport { isClient } from '../utilities/SSR'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport const initialState = {\r\n  cartMode: 'checkout-session',\r\n  mode: 'payment',\r\n  currency: 'USD',\r\n  language: isClient ? navigator.language : 'en-US',\r\n  lastClicked: '',\r\n  shouldDisplayCart: false,\r\n  cartCount: 0,\r\n  totalPrice: 0,\r\n  formattedTotalPrice: '',\r\n  cartDetails: {},\r\n  stripe: '',\r\n  shouldPersist: true\r\n}\r\n\r\nconst slice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addItem: {\r\n      reducer(state, { payload: { product, options } }) {\r\n        const { count, price_metadata, product_metadata } = options\r\n\r\n        const id =\r\n          product.id ||\r\n          product.price_id ||\r\n          product.sku_id ||\r\n          product.sku ||\r\n          uuidv4()\r\n\r\n        if (id in state.cartDetails) {\r\n          updateEntry({\r\n            state,\r\n            id,\r\n            count,\r\n            price_metadata,\r\n            product_metadata\r\n          })\r\n        } else {\r\n          createEntry({\r\n            state,\r\n            id,\r\n            product,\r\n            count,\r\n            price_metadata,\r\n            product_metadata\r\n          })\r\n        }\r\n      },\r\n      prepare(product, options = { count: 1 }) {\r\n        if (!options.price_metadata) options.price_metadata = {}\r\n        if (!options.product_metadata) options.product_metadata = {}\r\n        if (!options.count) options.count = 1\r\n        return { payload: { product, options } }\r\n      }\r\n    },\r\n    incrementItem: {\r\n      reducer(state, { payload: { id, options } }) {\r\n        updateEntry({\r\n          state,\r\n          id,\r\n          count: options.count\r\n        })\r\n      },\r\n      prepare(id, options = { count: 1 }) {\r\n        return { payload: { id, options } }\r\n      }\r\n    },\r\n    decrementItem: {\r\n      reducer(state, { payload: { id, options } }) {\r\n        if (state.cartDetails[id].quantity - options.count <= 0)\r\n          return removeEntry({ state, id })\r\n\r\n        updateEntry({\r\n          state,\r\n          id,\r\n          count: -options.count\r\n        })\r\n      },\r\n      prepare(id, options = { count: 1 }) {\r\n        return { payload: { id, options } }\r\n      }\r\n    },\r\n    clearCart: {\r\n      reducer(state) {\r\n        state.cartCount = 0\r\n        state.totalPrice = 0\r\n        state.cartDetails = {}\r\n        updateFormattedTotalPrice(state)\r\n      }\r\n    },\r\n    setItemQuantity: {\r\n      reducer(state, { payload: { id, quantity } }) {\r\n        if (quantity > 0 && id in state.cartDetails)\r\n          return updateQuantity({ ...state, state, id, quantity })\r\n        else if (quantity === 0) return removeEntry({ state, id })\r\n      },\r\n      prepare(id, quantity) {\r\n        return { payload: { id, quantity } }\r\n      }\r\n    },\r\n    removeItem: {\r\n      reducer(state, { payload: { id } }) {\r\n        removeEntry({ state, id })\r\n      },\r\n      prepare(id) {\r\n        return { payload: { id } }\r\n      }\r\n    },\r\n    loadCart: {\r\n      reducer(state, { payload: { cartDetails, shouldMerge } }) {\r\n        if (!shouldMerge) {\r\n          state.cartCount = 0\r\n          state.totalPrice = 0\r\n          state.cartDetails = {}\r\n        }\r\n\r\n        for (const id in cartDetails) {\r\n          const entry = cartDetails[id]\r\n          createEntry({\r\n            state,\r\n            id: entry.id,\r\n            product: entry,\r\n            count: entry.quantity\r\n          })\r\n        }\r\n      },\r\n      prepare(cartDetails, shouldMerge = true) {\r\n        return { payload: { cartDetails, shouldMerge } }\r\n      }\r\n    },\r\n    handleCartHover(state) {\r\n      state.shouldDisplayCart = true\r\n    },\r\n    handleCartClick(state) {\r\n      state.shouldDisplayCart = !state.shouldDisplayCart\r\n    },\r\n    handleCloseCart(state) {\r\n      state.shouldDisplayCart = false\r\n    },\r\n    storeLastClicked(state, { payload }) {\r\n      state.lastClicked = payload\r\n    },\r\n    changeStripeKey(state, { payload }) {\r\n      state.stripe = payload\r\n    },\r\n    changeLanguage(state, { payload }) {\r\n      state.language = payload\r\n    },\r\n    changeCurrency(state, { payload }) {\r\n      state.currency = payload\r\n    }\r\n  }\r\n})\r\n\r\nslice.actions.redirectToCheckout = (sessionId) => ({\r\n  type: 'cart/redirectToCheckout',\r\n  payload: { sessionId }\r\n})\r\nslice.actions.checkoutSingleItem = (itemsOrPriceId) => {\r\n  const quantity = itemsOrPriceId.quantity || 1\r\n\r\n  const cartItems = (() => {\r\n    if (typeof itemsOrPriceId === 'string') {\r\n      return {\r\n        lineItems: [\r\n          {\r\n            price: itemsOrPriceId,\r\n            quantity\r\n          }\r\n        ]\r\n      }\r\n    }\r\n    if (Object.prototype.hasOwnProperty.call(itemsOrPriceId, 'price')) {\r\n      return {\r\n        lineItems: [\r\n          {\r\n            price: itemsOrPriceId.price,\r\n            quantity\r\n          }\r\n        ]\r\n      }\r\n    }\r\n    /**\r\n     * Backward compatibility (SKU)\r\n     */\r\n    if (Object.prototype.hasOwnProperty.call(itemsOrPriceId, 'sku')) {\r\n      return {\r\n        items: [\r\n          {\r\n            sku: itemsOrPriceId.sku,\r\n            quantity\r\n          }\r\n        ]\r\n      }\r\n    }\r\n    return []\r\n  })()\r\n\r\n  return {\r\n    type: 'cart/checkoutSingleItem',\r\n    payload: {\r\n      cartItems\r\n    }\r\n  }\r\n}\r\n\r\nexport const { reducer, actions } = slice\r\n","/**\r\n * Returns the constructor name of any value.\r\n * @param {any} value\r\n * @returns string\r\n */\r\nexport function typeOf(value) {\r\n  if (value === undefined) return 'undefined'\r\n  if (value === null) return 'null'\r\n  return value.constructor.name\r\n}\r\n\r\nexport class PropertyValueError extends Error {\r\n  constructor({ property, method, expected, received }) {\r\n    const plural = Array.isArray(expected)\r\n    const expectedString = plural\r\n      ? `are ${expected.map((v) => JSON.stringify(v)).join(', ')}`\r\n      : `is ${JSON.stringify(expected)}`\r\n    const methodString = typeof method === 'string' ? ` in ${method}()` : ''\r\n    super(\r\n      `Invalid value ${JSON.stringify(\r\n        received\r\n      )} was received for ${property}. Valid ${\r\n        plural ? 'values' : 'value'\r\n      } for ${property}${methodString} ${expectedString}.`\r\n    )\r\n    this.name = 'PropertyValueError'\r\n  }\r\n}\r\n\r\nexport class PropertyTypeError extends TypeError {\r\n  constructor({ property, expected, received }) {\r\n    const plural = Array.isArray(expected)\r\n    const expectedString = plural\r\n      ? `are ${expected.map((v) => JSON.stringify(v)).join(', ')}`\r\n      : `is ${JSON.stringify(expected)}`\r\n    super(\r\n      `Invalid value with type ${JSON.stringify(\r\n        received\r\n      )} was received for ${property}. Valid ${\r\n        plural ? 'types' : 'type'\r\n      } for ${property} ${expectedString}.`\r\n    )\r\n    this.name = 'PropertyTypeError'\r\n  }\r\n}\r\n\r\nexport class PropertyRangeError extends RangeError {\r\n  constructor({ property, between, below, above, received }) {\r\n    let expectedString\r\n    if (Array.isArray(between))\r\n      expectedString = `between ${between[0]} and ${between[1]}`\r\n    else if (['string', 'number'].includes(typeof below))\r\n      expectedString = `below ${below}`\r\n    else if (['string', 'number'].includes(typeof above))\r\n      expectedString = `above ${above}`\r\n\r\n    super(\r\n      `Invalid value ${JSON.stringify(\r\n        received\r\n      )} was received for ${property}. Valid range for ${property} is ${expectedString}.`\r\n    )\r\n    this.name = 'PropertyRangeError'\r\n  }\r\n}\r\n","import '@stripe/stripe-js'\r\nimport {\r\n  typeOf,\r\n  PropertyTypeError,\r\n  PropertyValueError,\r\n  PropertyRangeError\r\n} from './helpers'\r\n\r\nexport function getCheckoutData(cart) {\r\n  const lineItems = []\r\n  for (const sku in cart.cartDetails)\r\n    lineItems.push({ price: sku, quantity: cart.cartDetails[sku].quantity })\r\n\r\n  const options = {\r\n    mode: cart.mode,\r\n    lineItems,\r\n    successUrl: cart.successUrl,\r\n    cancelUrl: cart.cancelUrl,\r\n    billingAddressCollection: cart.billingAddressCollection\r\n      ? 'required'\r\n      : 'auto',\r\n    submitType: 'auto'\r\n  }\r\n\r\n  if (cart.allowedCountries?.length) {\r\n    options.shippingAddressCollection = {\r\n      allowedCountries: cart.allowedCountries\r\n    }\r\n  }\r\n\r\n  return options\r\n}\r\n\r\nexport const handleStripe = (store) => (next) => async (action) => {\r\n  const stripePublicKey = store.getState().stripe\r\n  const cart = store.getState()\r\n\r\n  const checkout = ['cart/redirectToCheckout', 'cart/checkoutSingleItem']\r\n  if (checkout.includes(action.type)) {\r\n    if (typeof stripePublicKey !== 'string') {\r\n      throw new PropertyTypeError({\r\n        property: 'stripe',\r\n        expected: 'string',\r\n        received: typeOf(stripePublicKey)\r\n      })\r\n    } else if (stripePublicKey.length === 0) {\r\n      throw new PropertyRangeError({\r\n        property: 'stripe.length',\r\n        above: 0,\r\n        received: stripePublicKey.length\r\n      })\r\n    }\r\n  }\r\n\r\n  if (action.type === 'cart/redirectToCheckout') {\r\n    const stripe = initializeStripe(stripePublicKey)\r\n    if (cart.cartMode === 'checkout-session') {\r\n      return stripe.redirectToCheckout({\r\n        sessionId: action.payload.sessionId\r\n      })\r\n    } else if (cart.cartMode === 'client-only') {\r\n      const checkoutData = getCheckoutData(cart)\r\n      return stripe.redirectToCheckout(checkoutData)\r\n    } else {\r\n      throw new PropertyValueError({\r\n        property: 'cartMode',\r\n        method: 'redirectToCheckout',\r\n        expected: ['client-only', 'checkout-session'],\r\n        received: cart.cartMode\r\n      })\r\n    }\r\n  } else if (action.type === 'cart/checkoutSingleItem') {\r\n    const stripe = initializeStripe(stripePublicKey)\r\n\r\n    if (cart.cartMode === 'client-only') {\r\n      const options = {\r\n        mode: cart.mode,\r\n        successUrl: cart.successUrl,\r\n        cancelUrl: cart.cancelUrl,\r\n        ...action.payload.cartItems\r\n      }\r\n      return stripe.redirectToCheckout(options)\r\n    } else {\r\n      throw new PropertyValueError({\r\n        property: 'cartMode',\r\n        method: 'checkoutSingleItem',\r\n        expected: 'client-only',\r\n        received: cart.cartMode\r\n      })\r\n    }\r\n  }\r\n\r\n  return next(action)\r\n}\r\n\r\nfunction initializeStripe(publicKey) {\r\n  try {\r\n    // eslint-disable-next-line no-undef\r\n    const stripe = Stripe(publicKey)\r\n    stripe.registerAppInfo({\r\n      name: 'use-shopping-cart',\r\n      version: process.env.__buildVersion__,\r\n      url: 'https://useshoppingcart.com',\r\n      // eslint-disable-next-line camelcase\r\n      partner_id: 'pp_partner_H8MLmI3e9Oc3IK'\r\n    })\r\n    return stripe\r\n  } catch (error) {\r\n    console.error('Unable to initialize Stripe.')\r\n    throw error\r\n  }\r\n}\r\n","import { typeOf } from './helpers'\r\n\r\nexport const handleWarnings = (store) => (next) => async (action) => {\r\n  const count = ['cart/addItem', 'cart/incrementItem', 'cart/decrementItem']\r\n  if (\r\n    count.includes(action.type) &&\r\n    typeof action.payload.options.count !== 'number'\r\n  ) {\r\n    console.warn(\r\n      `Invalid count used with action ${\r\n        action.type\r\n      }: count must be a number. The current type is ${typeOf(\r\n        action.payload.options.count\r\n      )}.`,\r\n      action\r\n    )\r\n    return\r\n  }\r\n\r\n  const quantity = ['cart/setItemQuantity']\r\n  if (quantity.includes(action.type)) {\r\n    if (typeof action.payload.quantity !== 'number') {\r\n      console.warn(\r\n        `Invalid quantity used with action ${\r\n          action.type\r\n        }: quantity must be a number. The current type is ${typeOf(\r\n          action.payload.quantity\r\n        )}.`,\r\n        action\r\n      )\r\n      return\r\n    } else if (action.payload.quantity < 0) {\r\n      console.warn(\r\n        `Invalid quantity used with action ${\r\n          action.type\r\n        }: quantity must be greater than zero. The current value is ${JSON.stringify(\r\n          action.payload.quantity\r\n        )}.`,\r\n        action\r\n      )\r\n      return\r\n    }\r\n  }\r\n\r\n  const id = ['cart/incrementItem', 'cart/decrementItem', 'cart/removeItem']\r\n  if (\r\n    id.includes(action.type) &&\r\n    !(action.payload.id in store.getState().cartDetails)\r\n  ) {\r\n    console.warn(\r\n      `Invalid product ID used with action ${\r\n        action.type\r\n      }: the ID must already be in the cart. The current value is ${JSON.stringify(\r\n        action.payload.id\r\n      )}.`,\r\n      action\r\n    )\r\n    return\r\n  }\r\n\r\n  return next(action)\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport {\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER\r\n} from 'redux-persist'\r\nimport { isClient } from '../utilities/SSR'\r\n\r\nimport { updateFormattedTotalPrice, formatCurrencyString } from './Entry'\r\nimport { reducer, actions, initialState } from './slice'\r\n\r\nimport { handleStripe } from './middleware/stripe'\r\nimport { handleWarnings } from './middleware/warnings'\r\n\r\nexport async function filterCart(cartDetails, filter) {\r\n  const filteredCart = {}\r\n\r\n  for (const sku in cartDetails) {\r\n    const entry = cartDetails[sku]\r\n    if (await filter(entry)) filteredCart[sku] = entry\r\n  }\r\n\r\n  return filteredCart\r\n}\r\n\r\nfunction noop() {}\r\nfunction createNoopStorage() {\r\n  return {\r\n    getItem: noop,\r\n    setItem: noop,\r\n    removeItem: noop\r\n  }\r\n}\r\n\r\nfunction createLocalStorage() {\r\n  return {\r\n    async getItem(key) {\r\n      return window.localStorage.getItem(key)\r\n    },\r\n    async setItem(key, value) {\r\n      return window.localStorage.setItem(key, value)\r\n    },\r\n    async removeItem(key) {\r\n      return window.localStorage.removeItem(key)\r\n    }\r\n  }\r\n}\r\n\r\nexport { reducer, actions, formatCurrencyString }\r\n\r\nexport function createShoppingCartStore(options) {\r\n  options.shouldPersist = options.shouldPersist ?? true\r\n\r\n  if (!isClient) {\r\n    return configureStore({\r\n      reducer,\r\n      preloadedState: { ...initialState, ...options }\r\n    })\r\n  }\r\n  let storage\r\n  if (isClient) storage = options.storage || createLocalStorage()\r\n  else storage = createNoopStorage()\r\n  delete options.storage\r\n\r\n  const persistConfig = {\r\n    key: options.persistKey ?? 'root',\r\n    version: 1,\r\n    storage,\r\n    whitelist: ['cartCount', 'totalPrice', 'formattedTotalPrice', 'cartDetails']\r\n  }\r\n  const persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\n  const newInitialState = { ...initialState, ...options }\r\n  updateFormattedTotalPrice(newInitialState)\r\n\r\n  return configureStore({\r\n    reducer: options.shouldPersist ? persistedReducer : reducer,\r\n    preloadedState: newInitialState,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: options.shouldPersist\r\n            ? [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n            : ['persist/PERSIST']\r\n        }\r\n      }).concat(handleStripe, handleWarnings)\r\n  })\r\n}\r\n\r\n// For non-React apps\r\nexport { persistStore as createPersistedStore } from 'redux-persist'\r\n"],"names":["uuidv4"],"mappings":";;;;;;AAAA,MAAA,QAAA,GAAA,OAAA,MAAA,KAAA;;ACEA,MAAA,oBAAA,GAAA,CAAA;AACA,EAAA,KAAA;AACA,EAAA,QAAA;AACA,EAAA,QAAA,GAAA,QAAA,GAAA,SAAA,CAAA,QAAA,GAAA,OAAA;AACA,CAAA,KAAA;AACA,EAAA,MAAA,YAAA,GAAA,IAAA,IAAA,CAAA,YAAA,CAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA,UAAA;AACA,IAAA,QAAA;AACA,IAAA,eAAA,EAAA,QAAA;AACA,GAAA,EAAA;AACA,EAAA,MAAA,KAAA,GAAA,YAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACA,EAAA,IAAA,mBAAA,GAAA,KAAA;AACA;AACA,EAAA,KAAA,MAAA,IAAA,IAAA,KAAA,EAAA;AACA,IAAA,IAAA,IAAA,CAAA,IAAA,KAAA,SAAA,EAAA;AACA,MAAA,mBAAA,GAAA,MAAA;AACA,MAAA,KAAA;AACA,KAAA;AACA,GAAA;AACA;AACA,EAAA,KAAA,GAAA,mBAAA,GAAA,KAAA,GAAA,UAAA,CAAA,CAAA,KAAA,GAAA,GAAA,EAAA,OAAA,CAAA,CAAA,CAAA,EAAA;AACA,EAAA,OAAA,YAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,EAAA;AACA;AACA,SAAA,yBAAA,CAAA,KAAA,EAAA;AACA,EAAA,KAAA,CAAA,mBAAA,GAAA,oBAAA,CAAA;AACA,IAAA,KAAA,EAAA,KAAA,CAAA,UAAA;AACA,IAAA,QAAA,EAAA,KAAA,CAAA,QAAA;AACA,IAAA,QAAA,EAAA,KAAA,CAAA,QAAA;AACA,GAAA,EAAA;AACA,CAAA;AACA;AACA,SAAA,oBAAA,CAAA,KAAA,EAAA,EAAA,EAAA;AACA,EAAA,KAAA,CAAA,WAAA,CAAA,EAAA,CAAA,CAAA,cAAA,GAAA,oBAAA,CAAA;AACA,IAAA,KAAA,EAAA,KAAA,CAAA,WAAA,CAAA,EAAA,CAAA,CAAA,KAAA;AACA,IAAA,QAAA,EAAA,KAAA,CAAA,QAAA;AACA,IAAA,QAAA,EAAA,KAAA,CAAA,QAAA;AACA,GAAA,EAAA;AACA,CAAA;AACA;AACA,SAAA,oBAAA,CAAA,KAAA,EAAA,EAAA,EAAA;AACA,EAAA,KAAA,CAAA,WAAA,CAAA,EAAA,CAAA,CAAA,cAAA,GAAA,oBAAA,CAAA;AACA,IAAA,KAAA,EAAA,KAAA,CAAA,WAAA,CAAA,EAAA,CAAA,CAAA,KAAA;AACA,IAAA,QAAA,EAAA,KAAA,CAAA,QAAA;AACA,IAAA,QAAA,EAAA,KAAA,CAAA,QAAA;AACA,GAAA,EAAA;AACA,CAAA;AACA;AACA,SAAA,KAAA,CAAA,EAAA,EAAA,EAAA,OAAA,EAAA,QAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,EAAA;AACA,EAAA,OAAA;AACA,IAAA,GAAA,OAAA;AACA,IAAA,EAAA;AACA,IAAA,QAAA;AACA,IAAA,KAAA,EAAA,OAAA,CAAA,KAAA,GAAA,QAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,GAAA,OAAA,CAAA,UAAA;AACA,MAAA,GAAA,cAAA;AACA,KAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,GAAA,OAAA,CAAA,YAAA;AACA,MAAA,GAAA,gBAAA;AACA,KAAA;AACA,GAAA;AACA,CAAA;AACA;AACA,SAAA,WAAA,CAAA;AACA,EAAA,KAAA;AACA,EAAA,EAAA;AACA,EAAA,OAAA;AACA,EAAA,KAAA;AACA,EAAA,cAAA;AACA,EAAA,gBAAA;AACA,CAAA,EAAA;AACA,EAAA,MAAA,KAAA,GAAA,KAAA,CAAA;AACA,IAAA,EAAA;AACA,IAAA,OAAA;AACA,IAAA,QAAA,EAAA,KAAA;AACA,IAAA,cAAA;AACA,IAAA,gBAAA;AACA,GAAA,EAAA;AACA;AACA,EAAA,KAAA,CAAA,WAAA,CAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,oBAAA,CAAA,KAAA,EAAA,EAAA,EAAA;AACA,EAAA,oBAAA,CAAA,KAAA,EAAA,EAAA,EAAA;AACA;AACA,EAAA,KAAA,CAAA,UAAA,IAAA,KAAA,CAAA,MAAA;AACA,EAAA,KAAA,CAAA,SAAA,IAAA,MAAA;AACA,EAAA,yBAAA,CAAA,KAAA,EAAA;AACA,CAAA;AACA;AACA,SAAA,WAAA,CAAA;AACA,EAAA,KAAA;AACA,EAAA,EAAA;AACA,EAAA,KAAA;AACA,EAAA,cAAA;AACA,EAAA,gBAAA;AACA,CAAA,EAAA;AACA,EAAA,MAAA,KAAA,GAAA,KAAA,CAAA,WAAA,CAAA,EAAA,EAAA;AACA,EAAA,IAAA,KAAA,CAAA,QAAA,GAAA,KAAA,IAAA,CAAA,EAAA,OAAA,WAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA;AACA;AACA,EAAA,KAAA,CAAA,WAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA;AACA,IAAA,EAAA;AACA,IAAA,KAAA;AACA,IAAA,OAAA,EAAA,KAAA;AACA,IAAA,QAAA,EAAA,KAAA,CAAA,QAAA,GAAA,KAAA;AACA,IAAA,cAAA;AACA,IAAA,gBAAA;AACA,GAAA,EAAA;AACA,EAAA,oBAAA,CAAA,KAAA,EAAA,EAAA,EAAA;AACA;AACA,EAAA,KAAA,CAAA,UAAA,IAAA,KAAA,CAAA,KAAA,GAAA,MAAA;AACA,EAAA,KAAA,CAAA,SAAA,IAAA,MAAA;AACA,EAAA,yBAAA,CAAA,KAAA,EAAA;AACA,CAAA;AACA;AACA,SAAA,WAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA;AACA,EAAA,MAAA,WAAA,GAAA,KAAA,CAAA,YAAA;AACA,EAAA,KAAA,CAAA,UAAA,IAAA,WAAA,CAAA,EAAA,CAAA,CAAA,MAAA;AACA,EAAA,KAAA,CAAA,SAAA,IAAA,WAAA,CAAA,EAAA,CAAA,CAAA,SAAA;AACA,EAAA,OAAA,WAAA,CAAA,EAAA,EAAA;AACA,EAAA,yBAAA,CAAA,KAAA,EAAA;AACA,CAAA;AACA;AACA,SAAA,cAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AACA,EAAA,MAAA,KAAA,GAAA,KAAA,CAAA,WAAA,CAAA,EAAA,EAAA;AACA,EAAA,WAAA,CAAA;AACA,IAAA,KAAA;AACA,IAAA,EAAA;AACA,IAAA,KAAA,EAAA,QAAA,GAAA,KAAA,CAAA,QAAA;AACA,GAAA,EAAA;AACA;;ACzHA,MAAA,YAAA,GAAA;AACA,EAAA,QAAA,EAAA,kBAAA;AACA,EAAA,IAAA,EAAA,SAAA;AACA,EAAA,QAAA,EAAA,KAAA;AACA,EAAA,QAAA,EAAA,QAAA,GAAA,SAAA,CAAA,QAAA,GAAA,OAAA;AACA,EAAA,WAAA,EAAA,EAAA;AACA,EAAA,iBAAA,EAAA,KAAA;AACA,EAAA,SAAA,EAAA,CAAA;AACA,EAAA,UAAA,EAAA,CAAA;AACA,EAAA,mBAAA,EAAA,EAAA;AACA,EAAA,WAAA,EAAA,EAAA;AACA,EAAA,MAAA,EAAA,EAAA;AACA,EAAA,aAAA,EAAA,IAAA;AACA,EAAA;AACA;AACA,MAAA,KAAA,GAAA,WAAA,CAAA;AACA,EAAA,IAAA,EAAA,MAAA;AACA,EAAA,YAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,OAAA,CAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,OAAA,EAAA,EAAA,EAAA;AACA,QAAA,MAAA,EAAA,KAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,GAAA,QAAA;AACA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,OAAA,CAAA,EAAA;AACA,UAAA,OAAA,CAAA,QAAA;AACA,UAAA,OAAA,CAAA,MAAA;AACA,UAAA,OAAA,CAAA,GAAA;AACA,UAAAA,EAAA,GAAA;AACA;AACA,QAAA,IAAA,EAAA,IAAA,KAAA,CAAA,WAAA,EAAA;AACA,UAAA,WAAA,CAAA;AACA,YAAA,KAAA;AACA,YAAA,EAAA;AACA,YAAA,KAAA;AACA,YAAA,cAAA;AACA,YAAA,gBAAA;AACA,WAAA,EAAA;AACA,SAAA,MAAA;AACA,UAAA,WAAA,CAAA;AACA,YAAA,KAAA;AACA,YAAA,EAAA;AACA,YAAA,OAAA;AACA,YAAA,KAAA;AACA,YAAA,cAAA;AACA,YAAA,gBAAA;AACA,WAAA,EAAA;AACA,SAAA;AACA,OAAA;AACA,MAAA,OAAA,CAAA,OAAA,EAAA,OAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,IAAA,CAAA,OAAA,CAAA,cAAA,EAAA,OAAA,CAAA,cAAA,GAAA,GAAA;AACA,QAAA,IAAA,CAAA,OAAA,CAAA,gBAAA,EAAA,OAAA,CAAA,gBAAA,GAAA,GAAA;AACA,QAAA,IAAA,CAAA,OAAA,CAAA,KAAA,EAAA,OAAA,CAAA,KAAA,GAAA,EAAA;AACA,QAAA,OAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,OAAA,EAAA,EAAA;AACA,OAAA;AACA,KAAA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,OAAA,CAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA;AACA,QAAA,WAAA,CAAA;AACA,UAAA,KAAA;AACA,UAAA,EAAA;AACA,UAAA,KAAA,EAAA,OAAA,CAAA,KAAA;AACA,SAAA,EAAA;AACA,OAAA;AACA,MAAA,OAAA,CAAA,EAAA,EAAA,OAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,OAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AACA,OAAA;AACA,KAAA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,OAAA,CAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA;AACA,QAAA,IAAA,KAAA,CAAA,WAAA,CAAA,EAAA,CAAA,CAAA,QAAA,GAAA,OAAA,CAAA,KAAA,IAAA,CAAA;AACA,UAAA,OAAA,WAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA;AACA;AACA,QAAA,WAAA,CAAA;AACA,UAAA,KAAA;AACA,UAAA,EAAA;AACA,UAAA,KAAA,EAAA,CAAA,OAAA,CAAA,KAAA;AACA,SAAA,EAAA;AACA,OAAA;AACA,MAAA,OAAA,CAAA,EAAA,EAAA,OAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,OAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AACA,OAAA;AACA,KAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,OAAA,CAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,GAAA;AACA,QAAA,yBAAA,CAAA,KAAA,EAAA;AACA,OAAA;AACA,KAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,OAAA,CAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA;AACA,QAAA,IAAA,QAAA,GAAA,CAAA,IAAA,EAAA,IAAA,KAAA,CAAA,WAAA;AACA,UAAA,OAAA,cAAA,CAAA,EAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;AACA,aAAA,IAAA,QAAA,KAAA,CAAA,EAAA,OAAA,WAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA;AACA,OAAA;AACA,MAAA,OAAA,CAAA,EAAA,EAAA,QAAA,EAAA;AACA,QAAA,OAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AACA,OAAA;AACA,KAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,OAAA,CAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AACA,QAAA,WAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA;AACA,OAAA;AACA,MAAA,OAAA,CAAA,EAAA,EAAA;AACA,QAAA,OAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AACA,OAAA;AACA,KAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,OAAA,CAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,EAAA;AACA,QAAA,IAAA,CAAA,WAAA,EAAA;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,GAAA;AACA,SAAA;AACA;AACA,QAAA,KAAA,MAAA,EAAA,IAAA,WAAA,EAAA;AACA,UAAA,MAAA,KAAA,GAAA,WAAA,CAAA,EAAA,EAAA;AACA,UAAA,WAAA,CAAA;AACA,YAAA,KAAA;AACA,YAAA,EAAA,EAAA,KAAA,CAAA,EAAA;AACA,YAAA,OAAA,EAAA,KAAA;AACA,YAAA,KAAA,EAAA,KAAA,CAAA,QAAA;AACA,WAAA,EAAA;AACA,SAAA;AACA,OAAA;AACA,MAAA,OAAA,CAAA,WAAA,EAAA,WAAA,GAAA,IAAA,EAAA;AACA,QAAA,OAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA;AACA,OAAA;AACA,KAAA;AACA,IAAA,eAAA,CAAA,KAAA,EAAA;AACA,MAAA,KAAA,CAAA,iBAAA,GAAA,KAAA;AACA,KAAA;AACA,IAAA,eAAA,CAAA,KAAA,EAAA;AACA,MAAA,KAAA,CAAA,iBAAA,GAAA,CAAA,KAAA,CAAA,kBAAA;AACA,KAAA;AACA,IAAA,eAAA,CAAA,KAAA,EAAA;AACA,MAAA,KAAA,CAAA,iBAAA,GAAA,MAAA;AACA,KAAA;AACA,IAAA,gBAAA,CAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AACA,MAAA,KAAA,CAAA,WAAA,GAAA,QAAA;AACA,KAAA;AACA,IAAA,eAAA,CAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AACA,MAAA,KAAA,CAAA,MAAA,GAAA,QAAA;AACA,KAAA;AACA,IAAA,cAAA,CAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AACA,KAAA;AACA,IAAA,cAAA,CAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AACA,KAAA;AACA,GAAA;AACA,CAAA,EAAA;AACA;AACA,KAAA,CAAA,OAAA,CAAA,kBAAA,GAAA,CAAA,SAAA,MAAA;AACA,EAAA,IAAA,EAAA,yBAAA;AACA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA;AACA,CAAA,EAAA;AACA,KAAA,CAAA,OAAA,CAAA,kBAAA,GAAA,CAAA,cAAA,KAAA;AACA,EAAA,MAAA,QAAA,GAAA,cAAA,CAAA,QAAA,IAAA,EAAA;AACA;AACA,EAAA,MAAA,SAAA,GAAA,CAAA,MAAA;AACA,IAAA,IAAA,OAAA,cAAA,KAAA,QAAA,EAAA;AACA,MAAA,OAAA;AACA,QAAA,SAAA,EAAA;AACA,UAAA;AACA,YAAA,KAAA,EAAA,cAAA;AACA,YAAA,QAAA;AACA,WAAA;AACA,SAAA;AACA,OAAA;AACA,KAAA;AACA,IAAA,IAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,cAAA,EAAA,OAAA,CAAA,EAAA;AACA,MAAA,OAAA;AACA,QAAA,SAAA,EAAA;AACA,UAAA;AACA,YAAA,KAAA,EAAA,cAAA,CAAA,KAAA;AACA,YAAA,QAAA;AACA,WAAA;AACA,SAAA;AACA,OAAA;AACA,KAAA;AACA;AACA;AACA;AACA,IAAA,IAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,cAAA,EAAA,KAAA,CAAA,EAAA;AACA,MAAA,OAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA;AACA,YAAA,GAAA,EAAA,cAAA,CAAA,GAAA;AACA,YAAA,QAAA;AACA,WAAA;AACA,SAAA;AACA,OAAA;AACA,KAAA;AACA,IAAA,OAAA,EAAA;AACA,GAAA,IAAA;AACA;AACA,EAAA,OAAA;AACA,IAAA,IAAA,EAAA,yBAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,SAAA;AACA,KAAA;AACA,GAAA;AACA,EAAA;AACA;AACA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,GAAA;;AC1NA;AACA;AACA;AACA;AACA;AACA,SAAA,MAAA,CAAA,KAAA,EAAA;AACA,EAAA,IAAA,KAAA,KAAA,SAAA,EAAA,OAAA,WAAA;AACA,EAAA,IAAA,KAAA,KAAA,IAAA,EAAA,OAAA,MAAA;AACA,EAAA,OAAA,KAAA,CAAA,WAAA,CAAA,IAAA;AACA,CAAA;AACA;AACA,MAAA,kBAAA,SAAA,KAAA,CAAA;AACA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA;AACA,IAAA,MAAA,MAAA,GAAA,KAAA,CAAA,OAAA,CAAA,QAAA,EAAA;AACA,IAAA,MAAA,cAAA,GAAA,MAAA;AACA,QAAA,CAAA,IAAA,EAAA,QAAA,CAAA,GAAA,CAAA,CAAA,CAAA,KAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,QAAA,CAAA,GAAA,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA,EAAA;AACA,IAAA,MAAA,YAAA,GAAA,OAAA,MAAA,KAAA,QAAA,GAAA,CAAA,IAAA,EAAA,MAAA,CAAA,EAAA,CAAA,GAAA,GAAA;AACA,IAAA,KAAA;AACA,MAAA,CAAA,cAAA,EAAA,IAAA,CAAA,SAAA;AACA,QAAA,QAAA;AACA,OAAA,CAAA,kBAAA,EAAA,QAAA,CAAA,QAAA;AACA,QAAA,MAAA,GAAA,QAAA,GAAA,OAAA;AACA,OAAA,KAAA,EAAA,QAAA,CAAA,EAAA,YAAA,CAAA,CAAA,EAAA,cAAA,CAAA,CAAA,CAAA;AACA,MAAA;AACA,IAAA,IAAA,CAAA,IAAA,GAAA,qBAAA;AACA,GAAA;AACA,CAAA;AACA;AACA,MAAA,iBAAA,SAAA,SAAA,CAAA;AACA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA;AACA,IAAA,MAAA,MAAA,GAAA,KAAA,CAAA,OAAA,CAAA,QAAA,EAAA;AACA,IAAA,MAAA,cAAA,GAAA,MAAA;AACA,QAAA,CAAA,IAAA,EAAA,QAAA,CAAA,GAAA,CAAA,CAAA,CAAA,KAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,QAAA,CAAA,GAAA,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA,EAAA;AACA,IAAA,KAAA;AACA,MAAA,CAAA,wBAAA,EAAA,IAAA,CAAA,SAAA;AACA,QAAA,QAAA;AACA,OAAA,CAAA,kBAAA,EAAA,QAAA,CAAA,QAAA;AACA,QAAA,MAAA,GAAA,OAAA,GAAA,MAAA;AACA,OAAA,KAAA,EAAA,QAAA,CAAA,CAAA,EAAA,cAAA,CAAA,CAAA,CAAA;AACA,MAAA;AACA,IAAA,IAAA,CAAA,IAAA,GAAA,oBAAA;AACA,GAAA;AACA,CAAA;AACA;AACA,MAAA,kBAAA,SAAA,UAAA,CAAA;AACA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,QAAA,EAAA,EAAA;AACA,IAAA,IAAA,eAAA;AACA,IAAA,IAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AACA,MAAA,cAAA,GAAA,CAAA,QAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,KAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AACA,SAAA,IAAA,CAAA,QAAA,EAAA,QAAA,CAAA,CAAA,QAAA,CAAA,OAAA,KAAA,CAAA;AACA,MAAA,cAAA,GAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA;AACA,SAAA,IAAA,CAAA,QAAA,EAAA,QAAA,CAAA,CAAA,QAAA,CAAA,OAAA,KAAA,CAAA;AACA,MAAA,cAAA,GAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA;AACA;AACA,IAAA,KAAA;AACA,MAAA,CAAA,cAAA,EAAA,IAAA,CAAA,SAAA;AACA,QAAA,QAAA;AACA,OAAA,CAAA,kBAAA,EAAA,QAAA,CAAA,kBAAA,EAAA,QAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAA,CAAA;AACA,MAAA;AACA,IAAA,IAAA,CAAA,IAAA,GAAA,qBAAA;AACA,GAAA;AACA;;AC/DA,SAAA,cAAA,CAAA,GAAA,EAAA,EAAA,IAAA,aAAA,GAAA,SAAA,CAAA,CAAA,IAAA,KAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,MAAA,EAAA,EAAA,MAAA,EAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,EAAA,GAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,KAAA,gBAAA,IAAA,EAAA,KAAA,cAAA,KAAA,KAAA,IAAA,IAAA,EAAA,EAAA,OAAA,SAAA,CAAA,EAAA,CAAA,IAAA,EAAA,KAAA,QAAA,IAAA,EAAA,KAAA,gBAAA,EAAA,EAAA,aAAA,GAAA,KAAA,CAAA,CAAA,KAAA,GAAA,EAAA,CAAA,KAAA,CAAA,CAAA,EAAA,MAAA,IAAA,EAAA,KAAA,MAAA,IAAA,EAAA,KAAA,cAAA,EAAA,EAAA,KAAA,GAAA,EAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,IAAA,CAAA,aAAA,EAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,aAAA,GAAA,SAAA,CAAA,EAAA,EAAA,CAAA,OAAA,KAAA,CAAA,EAOA;AACA,SAAA,eAAA,CAAA,IAAA,EAAA;AACA,EAAA,MAAA,SAAA,GAAA,GAAA;AACA,EAAA,KAAA,MAAA,GAAA,IAAA,IAAA,CAAA,WAAA;AACA,IAAA,SAAA,CAAA,IAAA,CAAA,EAAA,KAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA;AACA;AACA,EAAA,MAAA,OAAA,GAAA;AACA,IAAA,IAAA,EAAA,IAAA,CAAA,IAAA;AACA,IAAA,SAAA;AACA,IAAA,UAAA,EAAA,IAAA,CAAA,UAAA;AACA,IAAA,SAAA,EAAA,IAAA,CAAA,SAAA;AACA,IAAA,wBAAA,EAAA,IAAA,CAAA,wBAAA;AACA,QAAA,UAAA;AACA,QAAA,MAAA;AACA,IAAA,UAAA,EAAA,MAAA;AACA,IAAA;AACA;AACA,EAAA,IAAA,cAAA,CAAA,CAAA,IAAA,EAAA,QAAA,EAAA,CAAA,IAAA,CAAA,CAAA,gBAAA,EAAA,gBAAA,EAAA,EAAA,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA;AACA,IAAA,OAAA,CAAA,yBAAA,GAAA;AACA,MAAA,gBAAA,EAAA,IAAA,CAAA,gBAAA;AACA,MAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,OAAA;AACA,CAAA;AACA;AACA,MAAA,YAAA,GAAA,CAAA,KAAA,KAAA,CAAA,IAAA,KAAA,OAAA,MAAA,KAAA;AACA,EAAA,MAAA,eAAA,GAAA,KAAA,CAAA,QAAA,EAAA,CAAA,OAAA;AACA,EAAA,MAAA,IAAA,GAAA,KAAA,CAAA,QAAA,GAAA;AACA;AACA,EAAA,MAAA,QAAA,GAAA,CAAA,yBAAA,EAAA,yBAAA,EAAA;AACA,EAAA,IAAA,QAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA;AACA,IAAA,IAAA,OAAA,eAAA,KAAA,QAAA,EAAA;AACA,MAAA,MAAA,IAAA,iBAAA,CAAA;AACA,QAAA,QAAA,EAAA,QAAA;AACA,QAAA,QAAA,EAAA,QAAA;AACA,QAAA,QAAA,EAAA,MAAA,CAAA,eAAA,CAAA;AACA,OAAA,CAAA;AACA,KAAA,MAAA,IAAA,eAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,MAAA,MAAA,IAAA,kBAAA,CAAA;AACA,QAAA,QAAA,EAAA,eAAA;AACA,QAAA,KAAA,EAAA,CAAA;AACA,QAAA,QAAA,EAAA,eAAA,CAAA,MAAA;AACA,OAAA,CAAA;AACA,KAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,MAAA,CAAA,IAAA,KAAA,yBAAA,EAAA;AACA,IAAA,MAAA,MAAA,GAAA,gBAAA,CAAA,eAAA,EAAA;AACA,IAAA,IAAA,IAAA,CAAA,QAAA,KAAA,kBAAA,EAAA;AACA,MAAA,OAAA,MAAA,CAAA,kBAAA,CAAA;AACA,QAAA,SAAA,EAAA,MAAA,CAAA,OAAA,CAAA,SAAA;AACA,OAAA,CAAA;AACA,KAAA,MAAA,IAAA,IAAA,CAAA,QAAA,KAAA,aAAA,EAAA;AACA,MAAA,MAAA,YAAA,GAAA,eAAA,CAAA,IAAA,EAAA;AACA,MAAA,OAAA,MAAA,CAAA,kBAAA,CAAA,YAAA,CAAA;AACA,KAAA,MAAA;AACA,MAAA,MAAA,IAAA,kBAAA,CAAA;AACA,QAAA,QAAA,EAAA,UAAA;AACA,QAAA,MAAA,EAAA,oBAAA;AACA,QAAA,QAAA,EAAA,CAAA,aAAA,EAAA,kBAAA,CAAA;AACA,QAAA,QAAA,EAAA,IAAA,CAAA,QAAA;AACA,OAAA,CAAA;AACA,KAAA;AACA,GAAA,MAAA,IAAA,MAAA,CAAA,IAAA,KAAA,yBAAA,EAAA;AACA,IAAA,MAAA,MAAA,GAAA,gBAAA,CAAA,eAAA,EAAA;AACA;AACA,IAAA,IAAA,IAAA,CAAA,QAAA,KAAA,aAAA,EAAA;AACA,MAAA,MAAA,OAAA,GAAA;AACA,QAAA,IAAA,EAAA,IAAA,CAAA,IAAA;AACA,QAAA,UAAA,EAAA,IAAA,CAAA,UAAA;AACA,QAAA,SAAA,EAAA,IAAA,CAAA,SAAA;AACA,QAAA,GAAA,MAAA,CAAA,OAAA,CAAA,SAAA;AACA,QAAA;AACA,MAAA,OAAA,MAAA,CAAA,kBAAA,CAAA,OAAA,CAAA;AACA,KAAA,MAAA;AACA,MAAA,MAAA,IAAA,kBAAA,CAAA;AACA,QAAA,QAAA,EAAA,UAAA;AACA,QAAA,MAAA,EAAA,oBAAA;AACA,QAAA,QAAA,EAAA,aAAA;AACA,QAAA,QAAA,EAAA,IAAA,CAAA,QAAA;AACA,OAAA,CAAA;AACA,KAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,IAAA,CAAA,MAAA,CAAA;AACA,EAAA;AACA;AACA,SAAA,gBAAA,CAAA,SAAA,EAAA;AACA,EAAA,IAAA;AACA;AACA,IAAA,MAAA,MAAA,GAAA,MAAA,CAAA,SAAA,EAAA;AACA,IAAA,MAAA,CAAA,eAAA,CAAA;AACA,MAAA,IAAA,EAAA,mBAAA;AACA,MAAA,OAAA,EAAA,OAAA;AACA,MAAA,GAAA,EAAA,6BAAA;AACA;AACA,MAAA,UAAA,EAAA,2BAAA;AACA,KAAA,EAAA;AACA,IAAA,OAAA,MAAA;AACA,GAAA,CAAA,OAAA,KAAA,EAAA;AACA,IAAA,OAAA,CAAA,KAAA,CAAA,8BAAA,EAAA;AACA,IAAA,MAAA,KAAA;AACA,GAAA;AACA;;AC7GA,MAAA,cAAA,GAAA,CAAA,KAAA,KAAA,CAAA,IAAA,KAAA,OAAA,MAAA,KAAA;AACA,EAAA,MAAA,KAAA,GAAA,CAAA,cAAA,EAAA,oBAAA,EAAA,oBAAA,EAAA;AACA,EAAA;AACA,IAAA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,IAAA,OAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,KAAA,KAAA,QAAA;AACA,IAAA;AACA,IAAA,OAAA,CAAA,IAAA;AACA,MAAA,CAAA,+BAAA;AACA,QAAA,MAAA,CAAA,IAAA;AACA,OAAA,8CAAA,EAAA,MAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,KAAA;AACA,OAAA,CAAA,CAAA,CAAA;AACA,MAAA,MAAA;AACA,MAAA;AACA,IAAA,MAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,QAAA,GAAA,CAAA,sBAAA,EAAA;AACA,EAAA,IAAA,QAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA;AACA,IAAA,IAAA,OAAA,MAAA,CAAA,OAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,MAAA,OAAA,CAAA,IAAA;AACA,QAAA,CAAA,kCAAA;AACA,UAAA,MAAA,CAAA,IAAA;AACA,SAAA,iDAAA,EAAA,MAAA;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,QAAA;AACA,SAAA,CAAA,CAAA,CAAA;AACA,QAAA,MAAA;AACA,QAAA;AACA,MAAA,MAAA;AACA,KAAA,MAAA,IAAA,MAAA,CAAA,OAAA,CAAA,QAAA,GAAA,CAAA,EAAA;AACA,MAAA,OAAA,CAAA,IAAA;AACA,QAAA,CAAA,kCAAA;AACA,UAAA,MAAA,CAAA,IAAA;AACA,SAAA,2DAAA,EAAA,IAAA,CAAA,SAAA;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,QAAA;AACA,SAAA,CAAA,CAAA,CAAA;AACA,QAAA,MAAA;AACA,QAAA;AACA,MAAA,MAAA;AACA,KAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,EAAA,GAAA,CAAA,oBAAA,EAAA,oBAAA,EAAA,iBAAA,EAAA;AACA,EAAA;AACA,IAAA,EAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,IAAA,EAAA,MAAA,CAAA,OAAA,CAAA,EAAA,IAAA,KAAA,CAAA,QAAA,EAAA,CAAA,WAAA,CAAA;AACA,IAAA;AACA,IAAA,OAAA,CAAA,IAAA;AACA,MAAA,CAAA,oCAAA;AACA,QAAA,MAAA,CAAA,IAAA;AACA,OAAA,2DAAA,EAAA,IAAA,CAAA,SAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,EAAA;AACA,OAAA,CAAA,CAAA,CAAA;AACA,MAAA,MAAA;AACA,MAAA;AACA,IAAA,MAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,IAAA,CAAA,MAAA,CAAA;AACA;;AC7DA,SAAA,gBAAA,CAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,GAAA,IAAA,IAAA,EAAA,EAAA,OAAA,GAAA,CAAA,EAAA,MAAA,EAAA,OAAA,KAAA,EAAA,CAAA,EAAA,EAkBA;AACA,eAAA,UAAA,CAAA,WAAA,EAAA,MAAA,EAAA;AACA,EAAA,MAAA,YAAA,GAAA,GAAA;AACA;AACA,EAAA,KAAA,MAAA,GAAA,IAAA,WAAA,EAAA;AACA,IAAA,MAAA,KAAA,GAAA,WAAA,CAAA,GAAA,EAAA;AACA,IAAA,IAAA,MAAA,MAAA,CAAA,KAAA,CAAA,EAAA,YAAA,CAAA,GAAA,CAAA,GAAA,MAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,YAAA;AACA,CAAA;AACA;AACA,SAAA,IAAA,GAAA,EAAA;AACA,SAAA,iBAAA,GAAA;AACA,EAAA,OAAA;AACA,IAAA,OAAA,EAAA,IAAA;AACA,IAAA,OAAA,EAAA,IAAA;AACA,IAAA,UAAA,EAAA,IAAA;AACA,GAAA;AACA,CAAA;AACA;AACA,SAAA,kBAAA,GAAA;AACA,EAAA,OAAA;AACA,IAAA,MAAA,OAAA,CAAA,GAAA,EAAA;AACA,MAAA,OAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,GAAA,CAAA;AACA,KAAA;AACA,IAAA,MAAA,OAAA,CAAA,GAAA,EAAA,KAAA,EAAA;AACA,MAAA,OAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,GAAA,EAAA,KAAA,CAAA;AACA,KAAA;AACA,IAAA,MAAA,UAAA,CAAA,GAAA,EAAA;AACA,MAAA,OAAA,MAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA;AACA,KAAA;AACA,GAAA;AACA,CAAA;AAGA;AACA,SAAA,uBAAA,CAAA,OAAA,EAAA;AACA,EAAA,OAAA,CAAA,aAAA,GAAA,gBAAA,CAAA,OAAA,CAAA,aAAA,EAAA,QAAA,IAAA,CAAA,EAAA;AACA;AACA,EAAA,IAAA,CAAA,QAAA,EAAA;AACA,IAAA,OAAA,cAAA,CAAA;AACA,MAAA,OAAA;AACA,MAAA,cAAA,EAAA,EAAA,GAAA,YAAA,EAAA,GAAA,OAAA,EAAA;AACA,KAAA,CAAA;AACA,GAAA;AACA,EAAA,IAAA,QAAA;AACA,EAAA,IAAA,QAAA,EAAA,OAAA,GAAA,OAAA,CAAA,OAAA,IAAA,kBAAA,GAAA;AACA,OAAA,OAAA,GAAA,iBAAA,GAAA;AACA,EAAA,OAAA,OAAA,CAAA,QAAA;AACA;AACA,EAAA,MAAA,aAAA,GAAA;AACA,IAAA,GAAA,EAAA,gBAAA,CAAA,OAAA,CAAA,UAAA,EAAA,QAAA,MAAA,CAAA,CAAA;AACA,IAAA,OAAA,EAAA,CAAA;AACA,IAAA,OAAA;AACA,IAAA,SAAA,EAAA,CAAA,WAAA,EAAA,YAAA,EAAA,qBAAA,EAAA,aAAA,CAAA;AACA,IAAA;AACA,EAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,aAAA,EAAA,OAAA,EAAA;AACA;AACA,EAAA,MAAA,eAAA,GAAA,EAAA,GAAA,YAAA,EAAA,GAAA,OAAA,GAAA;AACA,EAAA,yBAAA,CAAA,eAAA,EAAA;AACA;AACA,EAAA,OAAA,cAAA,CAAA;AACA,IAAA,OAAA,EAAA,OAAA,CAAA,aAAA,GAAA,gBAAA,GAAA,OAAA;AACA,IAAA,cAAA,EAAA,eAAA;AACA,IAAA,UAAA,EAAA,CAAA,oBAAA;AACA,MAAA,oBAAA,CAAA;AACA,QAAA,iBAAA,EAAA;AACA,UAAA,cAAA,EAAA,OAAA,CAAA,aAAA;AACA,cAAA,CAAA,KAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,CAAA;AACA,cAAA,CAAA,iBAAA,CAAA;AACA,SAAA;AACA,OAAA,CAAA,CAAA,MAAA,CAAA,YAAA,EAAA,cAAA,CAAA;AACA,GAAA,CAAA;AACA;;;;"}